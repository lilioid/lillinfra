apiVersion: v1
kind: List
items:

  # service
  - apiVersion: v1
    kind: Service
    metadata:
      name: authentik-server
      labels: &labels
        app.kubernetes.io/name: authentik-server
        app.kubernetes.io/component: server
    spec:
      selector: *labels
      ports:
        - name: http
          port: 80
          targetPort: http
        - name: https
          port: 443
          targetPort: https

  # deployment
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: authentik-server
      labels: *labels
    spec:
      revisionHistoryLimit: 3
      selector:
        matchLabels: *labels
      template:
        metadata:
          labels: *labels
        spec:
          terminationGracePeriodSeconds: 30
          volumes:
            - name: media
              persistentVolumeClaim:
                claimName: authentik-media
          securityContext:
            fsGroup: 1000
          containers:
            - name: authentik-server
              args: [ server ]
              image: ghcr.io/goauthentik/server
              imagePullPolicy: IfNotPresent
              envFrom:
                - configMapRef:
                    name: authentik-env
                - secretRef:
                    name: authentik-env
              volumeMounts:
                - name: media
                  mountPath: /media
              ports:
                - name: http
                  containerPort: 9000
                - name: https
                  containerPort: 9443
                - name: metrics
                  containerPort: 9300
              livenessProbe:
                httpGet:
                  port: http
                  path: /-/health/live/
              readinessProbe:
                httpGet:
                  port: http
                  path: /-/health/ready/
              startupProbe:
                failureThreshold: 60
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
                httpGet:
                  path: /-/health/live/
                  port: http
              resources:
                requests:
                  cpu: "100m"
                  memory: "500Mi"
                limits:
                  memory: "4Gi"

  # PersistentVolumeClaim
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: authentik-media
      labels: *labels
    spec:
      accessModes: [ ReadWriteMany ]
      storageClassName: nfs-fast
      resources:
        requests:
          storage: "2G"

