apiVersion: v1
kind: List
items:

  # service account
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: authentik

  # cluster role to list CRDs
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: authentik-authentik
    rules:
      - apiGroups: [ apiextensions.k8s.io ]
        resources: [ customresourcedefinitions ]
        verbs: [ list ]

  # binding of service account to cluster role
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: authentik-authentik
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: authentik-authentik
    subjects:
      - kind: ServiceAccount
        name: authentik

  # namespaced role so that outposts can be managed by authentik
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: authentik
    rules:
      - apiGroups: [ "" ]
        resources: [ secrets, services, configmaps ]
        verbs: [ get, create, delete, list, patch ]
      - apiGroups: [ extensions, apps ]
        resources: [ deployments ]
        verbs: [ get, create, delete, list, patch ]
      - apiGroups: [ extensions, networking.k8s.io ]
        resources: [ ingresses ]
        verbs: [ get, create, delete, list, patch ]
      - apiGroups: [ apiextensions.k8s.io ]
        resources: [ customresourcedefinitions ]
        verbs: [ list ]

  # bind service-account to role
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: authentik
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: authentik
    subjects:
      - kind: ServiceAccount
        name: authentik
